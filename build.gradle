plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.lira17'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

//apply from: 'liquibase.gradle'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.9'
	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	//implementation group: 'org.postgresql', name: 'postgresql', version: '42.4'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation "org.mapstruct:mapstruct:1.5.2.Final"


	//implementation 'org.liquibase:liquibase-core:3.8.4'
	//compileOnly "org.liquibase:liquibase-core:4.4.2"
	//compileOnly "org.liquibase.ext:liquibase-hibernate5:3.8.4"

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	//compileOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.2.Final"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation "org.testcontainers:postgresql:1.18.1"
	testImplementation "org.testcontainers:junit-jupiter:1.18.1"
	//testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.5.2.Final"
}

test {
	environment "EXCHANGE_TOKEN",project.property('TOKEN')
	environment "JWT_SECRET", project.property('SECRET')
	useJUnitPlatform()
}
